"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.CursorInterface = void 0;

var _flowRuntime = _interopRequireDefault(require("flow-runtime"));

// This file is part of leanes-mapper-addon.
//
// leanes-mapper-addon is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// leanes-mapper-addon is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with leanes-mapper-addon.  If not, see <https://www.gnu.org/licenses/>.
// import type { CollectionInterface } from './CollectionInterface';
const CursorInterface = _flowRuntime.default.type("CursorInterface", CursorInterface => {
  const Collection = CursorInterface.typeParameter("Collection"),
        Delegate = CursorInterface.typeParameter("Delegate"),
        Iterable = CursorInterface.typeParameter("Iterable", undefined, _flowRuntime.default.array(_flowRuntime.default.nullable(_flowRuntime.default.ref("object"))));
  return _flowRuntime.default.object(_flowRuntime.default.property("isClosed", _flowRuntime.default.boolean()), _flowRuntime.default.property("setCollection", _flowRuntime.default.function(_flowRuntime.default.param("aoCollection", Collection), _flowRuntime.default.return(CursorInterface))), _flowRuntime.default.property("setIterable", _flowRuntime.default.function(_flowRuntime.default.param("alArray", Iterable), _flowRuntime.default.return(CursorInterface))), _flowRuntime.default.property("toArray", _flowRuntime.default.function(_flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.array(_flowRuntime.default.nullable(Delegate)))))), _flowRuntime.default.property("next", _flowRuntime.default.function(_flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.nullable(Delegate))))), _flowRuntime.default.property("hasNext", _flowRuntime.default.function(_flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.boolean())))), _flowRuntime.default.property("close", _flowRuntime.default.function(_flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.void())))), _flowRuntime.default.property("count", _flowRuntime.default.function(_flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.number())))), _flowRuntime.default.property("forEach", _flowRuntime.default.function(_flowRuntime.default.param("lambda", _flowRuntime.default.function(_flowRuntime.default.param("_arg0", Delegate), _flowRuntime.default.param("_arg1", _flowRuntime.default.number()), _flowRuntime.default.return(_flowRuntime.default.nullable(_flowRuntime.default.ref("Promise", _flowRuntime.default.void()))))), _flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.void())))), _flowRuntime.default.property("map", _flowRuntime.default.function(_fn => {
    const R = _fn.typeParameter("R");

    return [_flowRuntime.default.param("lambda", _flowRuntime.default.function(_flowRuntime.default.param("_arg0", Delegate), _flowRuntime.default.param("_arg1", _flowRuntime.default.number()), _flowRuntime.default.return(_flowRuntime.default.union(R, _flowRuntime.default.ref("Promise", R))))), _flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.array(R)))];
  })), _flowRuntime.default.property("filter", _flowRuntime.default.function(_flowRuntime.default.param("lambda", _flowRuntime.default.function(_flowRuntime.default.param("_arg0", Delegate), _flowRuntime.default.param("_arg1", _flowRuntime.default.number()), _flowRuntime.default.return(_flowRuntime.default.union(_flowRuntime.default.boolean(), _flowRuntime.default.ref("Promise", _flowRuntime.default.boolean()))))), _flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.array(_flowRuntime.default.nullable(Delegate)))))), _flowRuntime.default.property("find", _flowRuntime.default.function(_flowRuntime.default.param("lambda", _flowRuntime.default.function(_flowRuntime.default.param("_arg0", Delegate), _flowRuntime.default.param("_arg1", _flowRuntime.default.number()), _flowRuntime.default.return(_flowRuntime.default.union(_flowRuntime.default.boolean(), _flowRuntime.default.ref("Promise", _flowRuntime.default.boolean()))))), _flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.nullable(Delegate))))), _flowRuntime.default.property("compact", _flowRuntime.default.function(_flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.array(_flowRuntime.default.nullable(Delegate)))))), _flowRuntime.default.property("reduce", _flowRuntime.default.function(_fn2 => {
    const I = _fn2.typeParameter("I");

    return [_flowRuntime.default.param("lambda", _flowRuntime.default.function(_flowRuntime.default.param("_arg0", I), _flowRuntime.default.param("_arg1", Delegate), _flowRuntime.default.param("_arg2", _flowRuntime.default.number()), _flowRuntime.default.return(_flowRuntime.default.union(I, _flowRuntime.default.ref("Promise", I))))), _flowRuntime.default.param("initialValue", I), _flowRuntime.default.return(_flowRuntime.default.ref("Promise", I))];
  })), _flowRuntime.default.property("first", _flowRuntime.default.function(_flowRuntime.default.return(_flowRuntime.default.ref("Promise", _flowRuntime.default.nullable(Delegate))))));
});

exports.CursorInterface = CursorInterface;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVyZmFjZXMvQ3Vyc29ySW50ZXJmYWNlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVPO0FBQUE7QUFBQTtBQUFBLHdFQUM0QiwyQkFBTSw4QkFBQyxrQ0FBRCxDQUFOLENBRDVCO0FBQUEsU0FFTCw0QkFDQSwwQ0FBVSw4QkFBVixDQURBLEVBR0EsNkVBQWMsMkNBQWMsVUFBZCxDQUFkLDhCQUF5QyxlQUF6QyxHQUhBLEVBS0EsMkVBQVksc0NBQVMsUUFBVCxDQUFaLDhCQUFnQyxlQUFoQyxHQUxBLEVBT0EsbUdBQVcsb0NBQVEsMkJBQU0sOEJBQUMsUUFBRCxDQUFOLENBQVIsQ0FBWCxHQVBBLEVBU0EsZ0dBQVEsb0NBQVEsOEJBQUMsUUFBRCxDQUFSLENBQVIsR0FUQSxFQVdBLG1HQUFXLG9DQUFRLDhCQUFSLENBQVgsR0FYQSxFQWFBLGlHQUFTLG9DQUFRLDJCQUFSLENBQVQsR0FiQSxFQWVBLGlHQUFTLG9DQUFRLDZCQUFSLENBQVQsR0FmQSxFQWlCQSx1RUFBUSxxQ0FBUSw4QkFBQyxvQ0FBQSxRQUFRLENBQVQsRUFBVyxrRUFBWCw4QkFBc0IsOEJBQUMsb0NBQVEsMkJBQVIsQ0FBRCxDQUF0QixFQUFSLENBQVIsOEJBQXVELG9DQUFRLDJCQUFSLENBQXZELEdBakJBLEVBbUJBO0FBQUE7O0FBQUEsWUFBTyxxQ0FBUSw4QkFBQyxvQ0FBQSxRQUFRLENBQVQsRUFBVyxrRUFBWCw4QkFBc0IsMkJBQUEsQ0FBQyxFQUFHLG9DQUFRLENBQVIsQ0FBSCxDQUF2QixFQUFSLENBQVAsOEJBQXNELG9DQUFRLDJCQUFBLENBQUMsQ0FBVCxDQUF0RDtBQUFBLEtBbkJBLEVBcUJBLHNFQUFPLHFDQUFRLDhCQUFDLG9DQUFBLFFBQVEsQ0FBVCxFQUFXLGtFQUFYLDhCQUFzQiwyREFBVSxvQ0FBUSw4QkFBUixDQUFWLENBQXRCLEVBQVIsQ0FBUCw4QkFBa0Usb0NBQVEsMkJBQU0sOEJBQUMsUUFBRCxDQUFOLENBQVIsQ0FBbEUsR0FyQkEsRUF1QkEsb0VBQUsscUNBQVEsOEJBQUMsb0NBQUEsUUFBUSxDQUFULEVBQVcsa0VBQVgsOEJBQXNCLDJEQUFVLG9DQUFRLDhCQUFSLENBQVYsQ0FBdEIsRUFBUixDQUFMLDhCQUFnRSxvQ0FBUSw4QkFBQyxRQUFELENBQVIsQ0FBaEUsR0F2QkEsRUF5QkEsbUdBQVcsb0NBQVEsMkJBQU0sOEJBQUMsUUFBRCxDQUFOLENBQVIsQ0FBWCxHQXpCQSxFQTJCQTtBQUFBOztBQUFBLFlBQVUscUNBQVEsOEJBQUMsb0NBQUEsQ0FBQyxDQUFGLEVBQUksb0NBQUEsUUFBUSxDQUFaLEVBQWMsa0VBQWQsOEJBQXlCLDJCQUFBLENBQUMsRUFBRyxvQ0FBUSxDQUFSLENBQUgsQ0FBMUIsRUFBUixDQUFWLEVBQTJELDJDQUFjLENBQWQsQ0FBM0QsOEJBQTZFLG9DQUFRLENBQVIsQ0FBN0U7QUFBQSxLQTNCQSxFQTZCQSxpR0FBUyxvQ0FBUSw4QkFBQyxRQUFELENBQVIsQ0FBVCxHQTdCQSxDQUZLO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgcGFydCBvZiBsZWFuZXMtbWFwcGVyLWFkZG9uLlxuLy9cbi8vIGxlYW5lcy1tYXBwZXItYWRkb24gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuLy8gaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4vLyB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuLy8gKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbi8vXG4vLyBsZWFuZXMtbWFwcGVyLWFkZG9uIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4vLyBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuLy8gTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuLy8gR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4vL1xuLy8gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4vLyBhbG9uZyB3aXRoIGxlYW5lcy1tYXBwZXItYWRkb24uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuXG4vLyBpbXBvcnQgdHlwZSB7IENvbGxlY3Rpb25JbnRlcmZhY2UgfSBmcm9tICcuL0NvbGxlY3Rpb25JbnRlcmZhY2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEN1cnNvckludGVyZmFjZTxcbiAgQ29sbGVjdGlvbiwgRGVsZWdhdGUsIEl0ZXJhYmxlID0gQXJyYXk8P29iamVjdD5cbj4ge1xuICBpc0Nsb3NlZDogYm9vbGVhbjtcblxuICBzZXRDb2xsZWN0aW9uKGFvQ29sbGVjdGlvbjogQ29sbGVjdGlvbik6IEN1cnNvckludGVyZmFjZTtcblxuICBzZXRJdGVyYWJsZShhbEFycmF5OiBJdGVyYWJsZSk6IEN1cnNvckludGVyZmFjZTtcblxuICB0b0FycmF5KCk6IFByb21pc2U8QXJyYXk8P0RlbGVnYXRlPj47XG5cbiAgbmV4dCgpOiBQcm9taXNlPD9EZWxlZ2F0ZT47XG5cbiAgaGFzTmV4dCgpOiBQcm9taXNlPGJvb2xlYW4+O1xuXG4gIGNsb3NlKCk6IFByb21pc2U8dm9pZD47XG5cbiAgY291bnQoKTogUHJvbWlzZTxudW1iZXI+O1xuXG4gIGZvckVhY2gobGFtYmRhOiAoRGVsZWdhdGUsIG51bWJlcikgPT4gP1Byb21pc2U8dm9pZD4pOiBQcm9taXNlPHZvaWQ+O1xuXG4gIG1hcDxSPihsYW1iZGE6IChEZWxlZ2F0ZSwgbnVtYmVyKSA9PiBSIHwgUHJvbWlzZTxSPik6IFByb21pc2U8UltdPjtcblxuICBmaWx0ZXIobGFtYmRhOiAoRGVsZWdhdGUsIG51bWJlcikgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4pOiBQcm9taXNlPEFycmF5PD9EZWxlZ2F0ZT4+O1xuXG4gIGZpbmQobGFtYmRhOiAoRGVsZWdhdGUsIG51bWJlcikgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4pOiBQcm9taXNlPD9EZWxlZ2F0ZT47XG5cbiAgY29tcGFjdCgpOiBQcm9taXNlPEFycmF5PD9EZWxlZ2F0ZT4+O1xuXG4gIHJlZHVjZTxJPihsYW1iZGE6IChJLCBEZWxlZ2F0ZSwgbnVtYmVyKSA9PiBJIHwgUHJvbWlzZTxJPiwgaW5pdGlhbFZhbHVlOiBJKTogUHJvbWlzZTxJPjtcblxuICBmaXJzdCgpOiBQcm9taXNlPD9EZWxlZ2F0ZT47XG59XG4iXX0=